#!/usr/bin/env bash

#Colors
RED='\033[0;31m'
RED_BOLD='\033[1;31m'
GREEN='\033[0;32m'
GREEN_BOLD='\033[1;32m'
NC='\033[0m'

problem="${1}"
problem=$(basename "${problem}")

cpp_file=$(find "$PWD" -regex ".*${problem}/main\.cpp" -maxdepth 2 -print0 | xargs -0 -I{} echo {})
cpp_file=${cpp_file/%.cpp}

g++ -DLOCAL -std=c++20 -O2 -Wall -Wextra -pedantic -Wshadow -Wformat=2 -Wfloat-equal -Wconversion -Wlogical-op -Wshift-overflow=2 -Wduplicated-cond -Wcast-qual -Wcast-align -Wno-unused-result -Wno-sign-conversion -o "${cpp_file}" "${cpp_file}.cpp"
if [[ $? -ne 0 ]]; then
        echo -e "‚ùå ${RED_BOLD}Compilation Error${NC}"
        exit 1
fi

if [[ $# -eq 1 ]]; then
        inputs=($(find "$PWD" -maxdepth 2 -regex ".*${problem}/input[0-9]*\.in" -print0 | xargs -0 -I{} echo {}))
else
        for it in "${@:2}"; do
                inputs+=($(find "$PWD" -maxdepth 2 -regex ".*${problem}/input${it}\.in" -print0 | xargs -0 -I{} echo {}))
        done
fi  

wrong=0
for input in "${inputs[@]}"; do
        answer="${input/%in/ans}"; output="${input/%in/out}"
        "${cpp_file}" < "${input}" > "${output}"

        diff -w "${answer}" "${output}" > /dev/null
        if [[ $? -ne 0 ]]; then
                wrong=1
                echo -e "\n‚ùå ${RED}Failed for $(basename ${input})${NC}"
                echo "INPUT"
                cat "${input}"
                echo "ANSWER AND OUTPUT"
                pr -m -t "${answer}" "${output}"
                echo ""
        else
                echo -e "‚úÖ ${GREEN}Passed for $(basename ${input})${NC}"
        fi
done

if [[ $wrong -eq 0 ]]; then
        echo -e "üíØ ${GREEN_BOLD}ALL TEST CASES PASSED ${NC}"
fi
